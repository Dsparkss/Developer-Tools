<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-08T18:00:18 IST" name="Banking" finished-at="2022-11-08T18:00:18 IST" duration-ms="60">
    <groups>
      <group name="Print">
        <method signature="da3.toy1()[pri:0, instance:test.da3@6bedbc4d]" name="toy1" class="test.da3"/>
        <method signature="da4.haii()[pri:0, instance:test.da4@69997e9d]" name="haii" class="test.da4"/>
        <method signature="da4.haiii()[pri:0, instance:test.da4@69997e9d]" name="haiii" class="test.da4"/>
        <method signature="day5.toy1(java.lang.String)[pri:0, instance:test.day5@614ca7df]" name="toy1" class="test.day5"/>
      </group> <!-- Print -->
    </groups>
    <test started-at="2022-11-08T18:00:18 IST" name="Booking" finished-at="2022-11-08T18:00:18 IST" duration-ms="51">
      <class name="test.day5">
        <test-method is-config="true" signature="don()[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:18 IST" name="don" finished-at="2022-11-08T18:00:18 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- don -->
        <test-method is-config="true" signature="toy()[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:18 IST" name="toy" finished-at="2022-11-08T18:00:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toy -->
        <test-method is-config="true" signature="don2()[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:18 IST" name="don2" finished-at="2022-11-08T18:00:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- don2 -->
        <test-method signature="toy1(java.lang.String)[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:18 IST" name="toy1" finished-at="2022-11-08T18:00:18 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BUMPER]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toy1 -->
        <test-method is-config="true" signature="don3()[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:18 IST" name="don3" finished-at="2022-11-08T18:00:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- don3 -->
        <test-method signature="toy3(java.lang.String)[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:18 IST" name="toy3" finished-at="2022-11-08T18:00:18 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ MY OWN CAR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toy3 -->
        <test-method is-config="true" signature="don2()[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:18 IST" name="don2" finished-at="2022-11-08T18:00:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- don2 -->
        <test-method is-config="true" signature="don3()[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:18 IST" name="don3" finished-at="2022-11-08T18:00:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- don3 -->
        <test-method is-config="true" signature="toy2()[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:18 IST" name="toy2" finished-at="2022-11-08T18:00:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toy2 -->
        <test-method is-config="true" signature="don1()[pri:0, instance:test.day5@614ca7df]" started-at="2022-11-08T18:00:19 IST" name="don1" finished-at="2022-11-08T18:00:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- don1 -->
      </class> <!-- test.day5 -->
    </test> <!-- Booking -->
    <test started-at="2022-11-08T18:00:18 IST" name="Nopackage" finished-at="2022-11-08T18:00:18 IST" duration-ms="60">
      <class name="test.da3">
        <test-method is-config="true" signature="toy()[pri:0, instance:test.da3@6bedbc4d]" started-at="2022-11-08T18:00:18 IST" name="toy" finished-at="2022-11-08T18:00:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toy -->
        <test-method signature="toy1()[pri:0, instance:test.da3@6bedbc4d]" started-at="2022-11-08T18:00:18 IST" name="toy1" finished-at="2022-11-08T18:00:18 IST" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.da3.toy1(da3.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toy1 -->
        <test-method is-config="true" signature="toy2()[pri:0, instance:test.da3@6bedbc4d]" started-at="2022-11-08T18:00:18 IST" name="toy2" finished-at="2022-11-08T18:00:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toy2 -->
      </class> <!-- test.da3 -->
      <class name="test.da4">
        <test-method signature="hai(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:test.da4@69997e9d]" started-at="2022-11-08T18:00:18 IST" name="hai" data-provider="getdata" finished-at="2022-11-08T18:00:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Id1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hai -->
        <test-method signature="hai(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:test.da4@69997e9d]" started-at="2022-11-08T18:00:18 IST" name="hai" data-provider="getdata" finished-at="2022-11-08T18:00:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Id2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hai -->
        <test-method signature="haii()[pri:0, instance:test.da4@69997e9d]" started-at="2022-11-08T18:00:18 IST" name="haii" finished-at="2022-11-08T18:00:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- haii -->
        <test-method signature="haiii()[pri:0, instance:test.da4@69997e9d]" started-at="2022-11-08T18:00:18 IST" name="haiii" finished-at="2022-11-08T18:00:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- haiii -->
      </class> <!-- test.da4 -->
    </test> <!-- Nopackage -->
  </suite> <!-- Banking -->
</testng-results>
